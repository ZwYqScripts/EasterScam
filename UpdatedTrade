local Atlas = loadstring(game:HttpGet("https://siegehub.net/Atlas.lua"))()


local UI = Atlas.new({
    Name = "ZScripts | TradeScam"; -- script name (required)
    ConfigFolder = "MyScript"; -- folder name to save configs to, set this to nil if you want to disable configs saving
    Credit = "Made By ZwYq#5964"; -- text to appear if player presses the "i" button on their UI (optional)
    Color = Color3.fromRGB(255,0,0); -- theme color for UI (required)
    Bind = "LeftControl"; -- keybind for toggling the UI, must be a valid KeyCode name
    -- Atlas Loader:
    UseLoader = false; -- whether to use Atlas Loader or not, if set to false than CheckKey and Discord are ignored
    FullName = "Trade Scam | Pet Simulator X"; -- works if UseLoader is set to true, can be same as Name argument, shown on loader frame
    CheckKey = function(inputtedKey) -- works if UseLoader is set to true, where inputtedKey is the key inputted by the player
        return inputtedKey=="TradePro"
    end;
    Discord = "https://discord.gg/QefK4c6AU5"; -- works if UseLoader is set to true, will be copied to clipboard if player presses "Copy Invite" button
})

UI:Notify({
    Title = "Welcome To Our Script!";
    Content = "Enjoy.";
  })

  local MyPage = UI:CreatePage("TradeScam") -- creates a page

  local MySection = MyPage:CreateSection("TradeScam Executable :")

MySection:CreateToggle({ -- IMPORTANT: This function does not return anything, please modify flags directly in order to read or update toggle values. SCROLL TO BOTTOM OF PAGE TO SEE HOW TO MODIFY FLAGS
	Name = "TradeScam {ON/OFF}"; -- required: name of element
	Flag = "MyToggle"; -- required: unique flag name to use
	Default = false; -- optional: default value for toggle, will be used if config saving is disabled and there is no saved data, will be false if left nil
	Callback = function(newValue)  -- optional: function that will be called when toggled, it is reccomended to modify flags directly  
		setclipboard("this is just a scam bro")
	end;
	-- Scroll to the bottom of the page to read more about the following two:
	Warning = "Make Sure Your In A Trade Before Enabling!"; -- optional: this argument is used in all elements (except for Body) and will indicate text that will appear when the player hovers over the warning icon
	WarningIcon = 12345; -- optional: ImageAssetId for warning icon, will only be used if Warning is not nil, default is yellow warning icon.
})


MySection:CreateSlider({ -- IMPORTANT: This function does not return anything, please modify flags directly in order to read or update toggle values. SCROLL TO BOTTOM OF PAGE TO SEE HOW TO MODIFY FLAGS
	Name = "Amount Of Ms {Server Lag}"; -- required: name of element 
	Flag = "MySlider"; -- required: unique flag name to use
	Min = 1; -- required: slider minimum drag 
	Max = 150; -- required: slider maximum drag (Max>Min or else script will error) 
	AllowOutOfRange = false; -- optional: determines whether the player can enter values outside of range Min:Max when typing in the TextBox. If left nil, this is false
	Digits = 1; -- optional: digits for rounding when dragging or entering values, default is 0 (whole numbers)
	Default = 5; -- optional: default value for slider, will be used if config saving is disabled and there is no saved data, will be the Min value if left nil
	Callback = function(newValue)  -- optional: function that will be called whenever slider flag is changed
		print("Lag Set To :",newValue)
	end;
	-- Scroll to the bottom of the page to read more about the following two:
	Warning = "Amount of lag used in trade."; -- optional: this argument is used in all elements (except for Body) and will indicate text that will appear when the player hovers over the warning icon
	WarningIcon = 12345; -- optional: ImageAssetId for warning icon, will only be used if Warning is not nil, default is yellow warning icon.
})


local MyParagraph = MySection:CreateParagraph("Script Has Been Made By ZwYq#5964.")
local MyParagraph = MySection:CreateParagraph("This Version Is A Free One. Paid One Is Better.")


local MySection = MyPage:CreateSection("")

local MySection = MyPage:CreateSection("Trade Stuff :")

local MyDropdown = MySection:CreateDropdown({ 
	Name = "Select Pets Stolen"; -- required: name of element
	Callback = function(item)  -- required: function to be called an item in the dropdown is activated
		print("Dropdown button pressed:",item) 
	end;
	Options = {"Event Pets","Exclusive Pets","Huge Pets","Titanic Pets"}; -- required: dropdown options
	ItemSelecting = true; -- optional: whether to control item selecting behavior in dropdowns (see showcase video), is false by default 
	DefaultItemSelected = "Event Pets"; -- optional: default item selected, will not run the callback and does not need to be from options table. This will be ignored if ItemSelecting is not true.
	-- Scroll to the bottom of the page to read more about the following two:
	Warning = "Select Real Pets!"; -- optional: this argument is used in all elements (except for Body) and will indicate text that will appear when the player hovers over the warning icon
	WarningIcon = 12345; -- optional: ImageAssetId for warning icon, will only be used if Warning is not nil, default is yellow warning icon.
})
